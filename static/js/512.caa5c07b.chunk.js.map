{"version":3,"file":"static/js/512.caa5c07b.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/Section/Section.styled.jsx","components/Section/Section.jsx","components/ContactForm.jsx","components/Filter.jsx","components/ContactItem.jsx","components/ContactList.jsx","components/Contacts.jsx","pages/MyContacts.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.contacts;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectFindContacts = state => {\n  const contacts = selectContacts(state);\n  const filter = selectFilter(state);\n\n  const normalizedFilter = filter.toLowerCase();\n\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.section`\n    min-width: 300px;\n   \n`\nexport const Title = styled.h2``;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Wrapper, Title } from './Section.styled';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <Wrapper>\n      <Title>{title}</Title>\n      {children}\n    </Wrapper>\n  );\n};\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.node.isRequired,\n  };\n","import { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport toast from 'react-hot-toast';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\n\nconst validationSchema = yup.object({\n  name: yup\n    .string('Enter name')\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    )\n    .trim()\n    .required('Name is required'),\n  number: yup\n    .string('Enter phone number')\n    .matches(\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .required('Number is required'),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(selectContacts);\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      number: '',\n    },\n\n    validationSchema: validationSchema,\n    onSubmit: ({ name, number }) => {      \n      const containName = contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      );\n\n      if (containName) {\n        return toast.error(`${name} is alredy in contacts`);\n      }\n      dispatch(addContact({ name, number }));\n      formik.values.name = '';\n      formik.values.number = '';      \n    }, \n  });\n\n  return (\n    <form onSubmit={formik.handleSubmit} >\n      <TextField\n        fullWidth\n        id=\"name\"\n        name=\"name\"\n        label=\"Name\"\n        onChange={formik.handleChange} \n        value ={formik.values.name}       \n        margin=\"normal\"\n        size=\"small\"        \n        error={formik.touched.name && Boolean(formik.errors.name)}\n        helperText={formik.touched.name && formik.errors.name}\n      />\n\n      <TextField\n        fullWidth\n        id=\"number\"\n        name=\"number\"\n        label=\"Number\"\n        onChange={formik.handleChange}\n        value ={formik.values.number}         \n        margin=\"normal\"\n        size=\"small\"\n        error={formik.touched.number && Boolean(formik.errors.number)}\n        helperText={formik.touched.number && formik.errors.number}\n      />\n\n      <Button fullWidth color=\"warning\" variant=\"contained\" type=\"submit\">\n        add contact\n      </Button>\n    </form>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { changeFilter } from 'redux/contacts/filterSlice';\nimport TextField from '@mui/material/TextField';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    e.preventDefault(); \n    const filter = e.currentTarget.value;\n    dispatch(changeFilter(filter))\n  }\n   \n  return (    \n    <TextField\n    fullWidth\n    id=\"filter\"\n    name=\"filter\"\n    label=\" Find contacts by name\"\n    onChange={handleChange}\n    margin=\"normal\"\n    size=\"small\"   \n  />\n  );\n};\n\n\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport ListItem from '@mui/material/ListItem';\nimport IconButton from '@mui/material/IconButton';\nimport ListItemText from '@mui/material/ListItemText';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { deleteContact } from 'redux/contacts/operations';\n\n\n\nexport const ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteContact(id));\n\n  return (\n    <>\n      <ListItem\n        secondaryAction={\n          <IconButton onClick={handleDelete} edge=\"end\" aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        }\n      >\n        <ListItemText>\n          {name}: {number}\n        </ListItemText>\n      </ListItem>\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { useSelector } from 'react-redux';\nimport { selectFindContacts } from 'redux/contacts/selectors';\nimport { ContactItem } from 'components/ContactItem';\nimport { List } from '@mui/material';\n\nexport const ContactList = () => {\n  const findContactsByName = useSelector(selectFindContacts);\n  return (\n    <List >\n      {findContactsByName.map(findContactByName => (\n        <ContactItem key={findContactByName.id} {...findContactByName}></ContactItem>\n      ))}\n    </List>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectIsLoading, selectError } from 'redux/contacts/selectors';\nimport { Section } from 'components/Section/Section';\nimport { ContactForm } from 'components/ContactForm';\nimport { Filter } from 'components/Filter';\nimport { ContactList } from 'components/ContactList';\nimport Box from '@mui/material/Box';\nimport { ThreeDots } from 'react-loader-spinner';\n\nexport const Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Box\n      sx={{\n        display: 'grid',\n        gridTemplateColumns: '1fr 1fr',\n        gridColumnGap: '60px',\n        alignSelf: 'baseline',\n      }}\n    >\n      <Section title={'Phonebook'}>\n        <ContactForm />\n      </Section>\n\n      <Section title={'Contacts'}>\n        <Filter />\n        {error && <b>Server Error</b>}\n        {isLoading && !error && <ThreeDots color=\"#ed6c02\" />}\n        <ContactList />\n      </Section>\n    </Box>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { Contacts } from '../components/Contacts';\n\nconst MyContacts = () => {\n  return (\n    <>\n      <Helmet>\n        <title>My contacts</title>\n      </Helmet>\n      <Contacts />\n    </>\n  );\n};\n\nexport default MyContacts;\n"],"names":["selectContacts","state","contacts","selectIsLoading","isLoading","selectError","error","selectFindContacts","filter","selectFilter","normalizedFilter","toLowerCase","contact","name","includes","Wrapper","styled","Title","Section","title","children","validationSchema","yup","matches","trim","required","number","ContactForm","dispatch","useDispatch","useSelector","formik","useFormik","initialValues","onSubmit","find","toast","addContact","values","handleSubmit","TextField","fullWidth","id","label","onChange","handleChange","value","margin","size","touched","Boolean","errors","helperText","Button","color","variant","type","Filter","e","preventDefault","currentTarget","changeFilter","ContactItem","ListItem","secondaryAction","IconButton","onClick","deleteContact","edge","Delete","ListItemText","ContactList","findContactsByName","List","map","findContactByName","Contacts","useEffect","fetchContacts","Box","sx","display","gridTemplateColumns","gridColumnGap","alignSelf","Helmet"],"sourceRoot":""}