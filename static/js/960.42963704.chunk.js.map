{"version":3,"file":"static/js/960.42963704.chunk.js","mappings":"6QAOMA,EAAmBC,EAAAA,GAAW,CAClCC,KAAMD,EAAAA,GACI,mBACPE,SAAS,oBACZC,MAAOH,EAAAA,GACG,oBACPG,MAAM,uBACND,SAAS,qBACZE,SAAUJ,EAAAA,GACA,uBACPK,IAAI,EAAG,qDACPH,SAAS,0BAGDI,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAIXC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbV,KAAM,GACNE,MAAO,GACPC,SAAU,IAEZL,iBAAkBA,EAClBa,SAAU,SAAAC,GACRC,QAAQC,IAAIF,GACZN,GAASS,EAAAA,EAAAA,IAASH,GACnB,IAGH,OACE,kBAAMD,SAAUH,EAAOQ,aAAcC,MAAO,CAAEC,MAAO,IAAKC,OAAQ,QAAlE,WACE,SAACC,EAAA,EAAD,CACEC,WAAS,EACTC,GAAG,OACHtB,KAAK,OACLuB,MAAM,OACNC,SAAUhB,EAAOiB,aACjBN,OAAO,SACPO,KAAK,QACLC,MAAOnB,EAAOoB,QAAQ5B,MAAQ6B,QAAQrB,EAAOsB,OAAO9B,MACpD+B,WAAYvB,EAAOoB,QAAQ5B,MAAQQ,EAAOsB,OAAO9B,QAGnD,SAACoB,EAAA,EAAD,CACEC,WAAS,EACTC,GAAG,QACHtB,KAAK,QACLuB,MAAM,QACNC,SAAUhB,EAAOiB,aACjBN,OAAO,SACPO,KAAK,QACLC,MAAOnB,EAAOoB,QAAQ1B,OAAS2B,QAAQrB,EAAOsB,OAAO5B,OACrD6B,WAAYvB,EAAOoB,QAAQ1B,OAASM,EAAOsB,OAAO5B,SAGpD,SAACkB,EAAA,EAAD,CACEC,WAAS,EACTC,GAAG,WACHtB,KAAK,WACLuB,MAAM,WACNS,KAAK,WACLR,SAAUhB,EAAOiB,aACjBN,OAAO,SACPO,KAAK,QACLC,MAAOnB,EAAOoB,QAAQzB,UAAY0B,QAAQrB,EAAOsB,OAAO3B,UACxD4B,WAAYvB,EAAOoB,QAAQzB,UAAYK,EAAOsB,OAAO3B,YAGvD,SAAC8B,EAAA,EAAD,CACEZ,WAAS,EACTa,MAAM,UACNC,QAAQ,YACRH,KAAK,SAJP,wBAUL,ECzED,EAXyB,WACvB,OACE,iCACE,SAACI,EAAA,EAAD,WACE,+CAEF,SAAC/B,EAAD,MAGL,C","sources":["components/RegisterForm.jsx","pages/Registration.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport { register } from 'redux/auth/operations';\n\nconst validationSchema = yup.object({\n  name: yup\n    .string('Enter your name')       \n    .required('Name is required'),\n  email: yup\n    .string('Enter your email')\n    .email('Enter a valid email')\n    .required('Email is required'),\n  password: yup\n    .string('Enter your password')\n    .min(7, 'Password should be of minimum 7 characters length')\n    .required('Password is required'),\n});\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  \n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: '',\n    },\n    validationSchema: validationSchema,\n    onSubmit: values => {\n      console.log(values);\n      dispatch(register(values));\n    },\n  });\n\n  return (\n    <form onSubmit={formik.handleSubmit} style={{ width: 500, margin: 'auto' }}>\n      <TextField\n        fullWidth\n        id=\"name\"\n        name=\"name\"\n        label=\"Name\"\n        onChange={formik.handleChange}\n        margin=\"normal\"\n        size=\"small\"\n        error={formik.touched.name && Boolean(formik.errors.name)}\n        helperText={formik.touched.name && formik.errors.name}\n      />\n\n      <TextField\n        fullWidth\n        id=\"email\"\n        name=\"email\"\n        label=\"Email\"\n        onChange={formik.handleChange}\n        margin=\"normal\"\n        size=\"small\"\n        error={formik.touched.email && Boolean(formik.errors.email)}\n        helperText={formik.touched.email && formik.errors.email}\n      />\n\n      <TextField\n        fullWidth\n        id=\"password\"\n        name=\"password\"\n        label=\"Password\"\n        type=\"password\"\n        onChange={formik.handleChange}\n        margin=\"normal\"\n        size=\"small\"\n        error={formik.touched.password && Boolean(formik.errors.password)}\n        helperText={formik.touched.password && formik.errors.password}\n      />\n\n      <Button\n        fullWidth        \n        color=\"warning\"\n        variant=\"contained\"\n        type=\"submit\"\n      >\n        Register\n      </Button>\n    </form>\n  );\n};\n","import { Helmet } from 'react-helmet';\nimport { RegisterForm } from 'components/RegisterForm';\n\n\nconst RegistrationPage = () => {\n  return (\n    <>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </>\n  );\n};\n\nexport default RegistrationPage;"],"names":["validationSchema","yup","name","required","email","password","min","RegisterForm","dispatch","useDispatch","formik","useFormik","initialValues","onSubmit","values","console","log","register","handleSubmit","style","width","margin","TextField","fullWidth","id","label","onChange","handleChange","size","error","touched","Boolean","errors","helperText","type","Button","color","variant","Helmet"],"sourceRoot":""}